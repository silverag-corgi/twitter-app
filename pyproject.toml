####################################################################################################
# package management tool
####################################################################################################
[tool.poetry]
name = "twitter-app"
version = "0.1.0"
description = "Twitter app"
authors = ["Rem_"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "twitter_app", from = "src"}
]

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.dependencies]
python = "^3.10"
tweepy = "^4.4.0"
pandas = "^1.4.0"
tzdata = "^2021.5"
python-lib-for-me = {path = "../python-lib-for-me", develop = true}

[tool.poetry.dev-dependencies]
pyproject-flake8 = "^0.0.1-alpha.2"
isort = "^5.10.1"
mypy = "^0.931"

[tool.poetry.scripts]
followxx-gen    = "twitter_app.main.twitter_followxx_list_gen:main"
list-exp        = "twitter_app.main.twitter_list_export:main"
list-imp        = "twitter_app.main.twitter_list_import:main"
pin-auth        = "twitter_app.main.twitter_pin_auth:main"
limit-show      = "twitter_app.main.twitter_rate_limit_show:main"
tweet-search    = "twitter_app.main.twitter_tweet_search:main"
tweet-stream    = "twitter_app.main.twitter_tweet_stream:main"

####################################################################################################
# build system
####################################################################################################
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

####################################################################################################
# static code analysis tool
####################################################################################################
[tool.flake8] # pyproject-flake8
max-line-length = 100
max-complexity = 15 # more than 20 is hard to test because of complex code.
extend-ignore = """
    E125,
    E127,
    E203,
    E222,
    E712,
    F541,
    F841,
    W293,
    """
    # defaults: E121,E123,E126,E226,E24,E704,W503,W504
    # E125 continuation line with same indent as next logical line
    # E127 continuation line over-indented for visual indent
    # E203 whitespace before ':'
    # E222 multiple spaces after operator
    # E712 comparison to True should be 'if cond is True:' or 'if cond:'
    # F541 f-string is missing placeholders
    # F841 local variable name is assigned to but never used
    # W293 blank line contains whitespace
per-file-ignores = """
    __init__.py: F401,F403
    """
    # F401 module imported but unused
    # F403 'from module import *' used; unable to detect undefined names
extend-exclude = """
    .venv,
    build,
    """
    # defaults: .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.nox,.eggs,*.egg

[tool.isort]
src_paths = ["src", "tests"]
multi_line_output = 3
include_trailing_comma = true
line_length = 100

[tool.mypy]
# Import discovery
files = "src,tests"
ignore_missing_imports = true
# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
strict_optional = true
# Configuring warnings
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
# Suppressing errors
show_none_errors = true
# Configuring error messages
show_column_numbers = true
show_error_codes = true
pretty = true
